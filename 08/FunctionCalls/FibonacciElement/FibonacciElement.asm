// ------------------------------------------------------------------------------
//init
// ------------------------------------------------------------------------------
@256
D=A
@SP
M=D
// ------------------------------------------------------------------------------
// call Sys.init 0
// ------------------------------------------------------------------------------
@Return.FibonacciElement.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Function.Sys.init
0;JMP
(Return.FibonacciElement.1)
// ------------------------------------------------------------------------------
// function Main.fibonacci 0
// ------------------------------------------------------------------------------
(Function.Main.fibonacci)
// ------------------------------------------------------------------------------
// push argument 0
// ------------------------------------------------------------------------------
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// push constant 2
// ------------------------------------------------------------------------------
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// lt
// ------------------------------------------------------------------------------
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Lt1True
D;JLT
D=0
@Lt1End
0;JMP
(Lt1True)
D=-1
(Lt1End)
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// if-goto IF_TRUE
// ------------------------------------------------------------------------------
@SP
M=M-1
A=M
D=M
@LabelIF_TRUE
D;JNE
// ------------------------------------------------------------------------------
// goto IF_FALSE
// ------------------------------------------------------------------------------
@LabelIF_FALSE
0;JMP
// ------------------------------------------------------------------------------
// label IF_TRUE
// ------------------------------------------------------------------------------
(LabelIF_TRUE)
// ------------------------------------------------------------------------------
// push argument 0
// ------------------------------------------------------------------------------
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// return
// ------------------------------------------------------------------------------
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
// ------------------------------------------------------------------------------
// label IF_FALSE
// ------------------------------------------------------------------------------
(LabelIF_FALSE)
// ------------------------------------------------------------------------------
// push argument 0
// ------------------------------------------------------------------------------
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// push constant 2
// ------------------------------------------------------------------------------
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// sub
// ------------------------------------------------------------------------------
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// ------------------------------------------------------------------------------
// call Main.fibonacci 1
// ------------------------------------------------------------------------------
@Return.Main.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Function.Main.fibonacci
0;JMP
(Return.Main.1)
// ------------------------------------------------------------------------------
// push argument 0
// ------------------------------------------------------------------------------
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// push constant 1
// ------------------------------------------------------------------------------
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// sub
// ------------------------------------------------------------------------------
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// ------------------------------------------------------------------------------
// call Main.fibonacci 1
// ------------------------------------------------------------------------------
@Return.Main.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Function.Main.fibonacci
0;JMP
(Return.Main.2)
// ------------------------------------------------------------------------------
// add
// ------------------------------------------------------------------------------
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// ------------------------------------------------------------------------------
// return
// ------------------------------------------------------------------------------
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
// ------------------------------------------------------------------------------
// function Sys.init 0
// ------------------------------------------------------------------------------
(Function.Sys.init)
// ------------------------------------------------------------------------------
// push constant 4
// ------------------------------------------------------------------------------
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// ------------------------------------------------------------------------------
// call Main.fibonacci 1
// ------------------------------------------------------------------------------
@Return.Sys.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Function.Main.fibonacci
0;JMP
(Return.Sys.1)
// ------------------------------------------------------------------------------
// label WHILE
// ------------------------------------------------------------------------------
(LabelWHILE)
// ------------------------------------------------------------------------------
// goto WHILE
// ------------------------------------------------------------------------------
@LabelWHILE
0;JMP
